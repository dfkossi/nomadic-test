{"ast":null,"code":"import { HttpBackend } from '@taquito/http-utils';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nvar defaultIndexerUrl = 'https://api.tez.ie/indexer/mainnet';\n/***\r\n * @description RpcClient allows interaction with Tezos network through an rpc node\r\n */\n\nvar IndexerClient =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param url indexer root url (default https://mainnet.tezrpc.me)\r\n   * @param httpBackend Http backend that issue http request.\r\n   * You can override it by providing your own if you which to hook in the request/response\r\n   *\r\n   * @example new IndexerClient('https://api.tez.ie/indexer/mainnet')\r\n   */\n  function IndexerClient(url, httpBackend) {\n    if (url === void 0) {\n      url = defaultIndexerUrl;\n    }\n\n    if (httpBackend === void 0) {\n      httpBackend = new HttpBackend();\n    }\n\n    this.url = url;\n    this.httpBackend = httpBackend;\n  }\n\n  IndexerClient.prototype.getBalanceHistory = function (address, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        start = _b.start,\n        end = _b.end,\n        limit = _b.limit;\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_c) {\n        return [2\n        /*return*/\n        , this.httpBackend.createRequest({\n          url: this.url + \"/balances/\" + address,\n          method: 'GET',\n          query: {\n            start: start,\n            end: end,\n            limit: limit\n          }\n        })];\n      });\n    });\n  };\n\n  return IndexerClient;\n}();\n\nexport { IndexerClient };","map":{"version":3,"sources":["../src/taquito-indexer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAM,iBAAiB,GAAG,oCAA1B;AAQA;;;;;;;;;;;;;;;AAYE,WAAA,aAAA,CACU,GADV,EAEU,WAFV,EAEsD;AAD5C,QAAA,GAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,GAAA,GAAA,iBAAA;AAA+B;;AAC/B,QAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,WAAA,GAAA,IAA+B,WAA/B,EAAA;AAA4C;;AAD5C,SAAA,GAAA,GAAA,GAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACN;;AAEE,EAAA,aAAA,CAAA,SAAA,CAAA,iBAAA,GAAN,UACE,OADF,EAEE,EAFF,EAEmD;QAAjD,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,E;QAAE,KAAA,GAAA,EAAA,CAAA,K;QAAO,GAAA,GAAA,EAAA,CAAA,G;QAAK,KAAA,GAAA,EAAA,CAAA,K;;;;AAEd,eAAA,CAAA;AAAA;AAAA,UAAO,KAAK,WAAL,CAAiB,aAAjB,CAA+B;AACpC,UAAA,GAAG,EAAK,KAAK,GAAL,GAAQ,YAAR,GAAqB,OADO;AAEpC,UAAA,MAAM,EAAE,KAF4B;AAGpC,UAAA,KAAK,EAAE;AACL,YAAA,KAAK,EAAA,KADA;AAEL,YAAA,GAAG,EAAA,GAFE;AAGL,YAAA,KAAK,EAAA;AAHA;AAH6B,SAA/B,CAAP,CAAA;;;AASD,GAbK;;AAcR,SAAA,aAAA;AAAC,C","sourcesContent":["import { HttpBackend } from '@taquito/http-utils';\nimport { BalanceHistory } from './types';\n\nconst defaultIndexerUrl = 'https://api.tez.ie/indexer/mainnet';\n\nexport interface BalanceHistoryOptions {\n  start?: string | Date;\n  end?: string | Date;\n  limit?: number;\n}\n\n/***\n * @description RpcClient allows interaction with Tezos network through an rpc node\n */\nexport class IndexerClient {\n  /**\n   *\n   * @param url indexer root url (default https://mainnet.tezrpc.me)\n   * @param httpBackend Http backend that issue http request.\n   * You can override it by providing your own if you which to hook in the request/response\n   *\n   * @example new IndexerClient('https://api.tez.ie/indexer/mainnet')\n   */\n  constructor(\n    private url: string = defaultIndexerUrl,\n    private httpBackend: HttpBackend = new HttpBackend()\n  ) {}\n\n  async getBalanceHistory(\n    address: string,\n    { start, end, limit }: BalanceHistoryOptions = {}\n  ): Promise<BalanceHistory> {\n    return this.httpBackend.createRequest({\n      url: `${this.url}/balances/${address}`,\n      method: 'GET',\n      query: {\n        start,\n        end,\n        limit,\n      },\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}